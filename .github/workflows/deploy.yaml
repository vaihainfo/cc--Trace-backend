name: Deploy to EC2 (Staging)

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.TOKEN_STAGING }}

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY_STAGING }}

      - name: Deploy to EC2
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_STAGING }}
        run: |
          ssh -tt -o ServerAliveInterval=30 -o StrictHostKeyChecking=no ubuntu@3.110.178.245 << 'EOF'
            set -e

            echo "=== SSH Connection established ==="

            # Navigate to the application directory
            cd /home/ubuntu/tracebalebackend-staging || exit 1

            # Ensure correct file permissions
            echo "Setting correct permissions..."
            sudo chown -R ubuntu:ubuntu .
            sudo chmod -R 755 .

            # Configure Git
            echo "Configuring Git..."
            git config --global --add safe.directory /home/ubuntu/tracebalebackend-staging
            git config --global user.email "info.vaiha23@gmail.com"
            git config --global user.name "info.vaiha23@gmail.com"

            # Store credentials temporarily
            git config --global credential.helper store
            echo 'https://info.vaiha23:${GITHUB_TOKEN}@github.com' > ~/.git-credentials
            chmod 600 ~/.git-credentials

            # Ensure the correct remote URL
            echo "Setting correct GitHub remote..."
            git remote set-url origin "https://info.vaiha23:${GITHUB_TOKEN}@github.com/vaihainfo/tracebalebackend.git"

            # Ensure we are on the correct branch
            echo "Checking out staging branch..."
            git checkout staging || git checkout -b staging origin/staging

            # Fetch and reset to the latest staging branch
            echo "Fetching latest changes from staging..."
            git fetch --all --prune
            git reset --hard origin/staging
            git clean -fd

            # Verify latest commit
            echo "Current commit hash:"
            git rev-parse HEAD

            # Ensure correct file permissions after fetching updates
            echo "Resetting file permissions..."
            sudo chown -R ubuntu:ubuntu .
            sudo chmod -R 755 .

            # Install dependencies
            echo "Cleaning NPM cache..."
            npm cache clean --force

            echo "Installing dependencies..."
            npm ci --legacy-peer-deps --verbose

            # Build the project
            echo "Building project..."
            npm run build

            # Ensure PM2 is installed
            echo "Ensuring PM2 is installed..."
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi

            # Restart PM2 process
            echo "Restarting PM2..."
            pm2 restart backend || pm2 start npm --name "backend" -- start

            # Restart Nginx
            echo "Restarting Nginx..."
            sudo systemctl restart nginx

            # Clean up credentials
            echo "Cleaning up credentials..."
            rm -f ~/.git-credentials
            git config --global --unset credential.helper

            echo "=== Deployment successful ==="
          EOF

      - name: Final confirmation
        run: echo "Deployment workflow completed successfully."
