name: Deploy to EC2

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.TOKEN_STAGING }}

      - name: Set up SSH key for EC2
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY_STAGING }}

      - name: SSH into EC2 and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_STAGING }}
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@3.110.178.245 << EOF
            echo "SSH Connection successful."

            # Navigate to the application directory
            cd /home/ubuntu/tracebalebackend-staging || exit 1

            # Fix permissions
            sudo chown -R ubuntu:ubuntu .
            sudo chmod -R 775 .

            # Configure Git
            git config --global --add safe.directory /home/ubuntu/tracebalebackend-staging
            git config user.email "info.vaiha23@gmail.com"
            git config user.name "info.vaiha23@gmail.com"

            # Store credentials temporarily
            git config credential.helper store
            echo 'https://info.vaiha23:${GITHUB_TOKEN}@github.com' > ~/.git-credentials
            chmod 600 ~/.git-credentials

            # Update GitHub remote URL
            git remote set-url origin "https://github.com/vaihainfo/tracebalebackend.git"

            # Fetch latest changes
            echo "Fetching latest changes..."
            git fetch origin staging || exit 1

            # Reset and clean repo
            git reset --hard origin/staging || exit 1
            git clean -fd || exit 1

            # Show current commit hash
            git rev-parse HEAD || exit 1

            # Fix permissions again
            sudo chown -R ubuntu:ubuntu .
            sudo chmod -R 775 .

            # Install dependencies
            npm install --legacy-peer-deps || exit 1

            # Set execute permission for TypeScript compiler
            chmod +x ./node_modules/.bin/tsc || true

            # Build the project
            npm run build || exit 1

            # Restart PM2 process
            if pm2 list | grep -q "backend"; then
              pm2 delete backend
            fi
            pm2 start npm --name "backend" -- start || exit 1

            # Clean up credentials
            rm -f ~/.git-credentials
            git config --global --unset credential.helper

            echo "Deployment completed successfully."
          EOF

      - name: Clean up and exit
        run: echo "Deployment process finished."
