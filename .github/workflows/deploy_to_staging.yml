name: Deploy to AlmaLinux EC2

on:
  push:
    branches:
      - staging1  

jobs:
  Deploy:
    name: Deploy to EC2 (AlmaLinux)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up SSH for Deployment
        run: |
          # Ensure the .ssh directory exists and has the right permissions
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # Scan for the server's SSH key, add it to known_hosts, and set permissions
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

          # Load the private key from GitHub secrets and set the right permissions
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy to Backend Directory
        env:
          HOSTNAME: ${{ secrets.SSH_HOST }}         
          USER_NAME: ${{ secrets.EC2_USER }}        
        run: |
          # Use SSH to connect to the server and run deployment scripts
          ssh -o StrictHostKeyChecking=no ${USER_NAME}@${HOSTNAME} '
              # Navigate to the correct backend directory
              cd /home/ubuntu/tracebalebackend-staging &&

              # Ensure git is configured to use SSH instead of HTTPS
              git config --global url."git@github.com:".insteadOf "https://github.com/" &&

              # Fetch the latest code from the staging1 branch
              git fetch --all &&
              git reset --hard origin/staging1 &&
              git pull origin staging1 &&

              # Install dependencies
              npm install --legacy-peer-deps && 

              # Set execute permission for TypeScript compiler
              chmod +x ./node_modules/.bin/tsc &&

              # Build the project
              npm run build &&

              # Kill any process using port 5000 and delete the backend PM2 process
              sudo lsof -t -i:5000 | xargs kill -9 &&
              pm2 delete backend &&

              # Start the backend using PM2
              pm2 start npm --name "backend" -- start
          '
