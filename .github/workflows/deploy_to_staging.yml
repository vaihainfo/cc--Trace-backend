name: Deploy to AlmaLinux EC2

on:
  push:
    branches:
      - staging1  

jobs:
  Deploy:
    name: Deploy to EC2 (AlmaLinux)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up SSH for Deployment
        run: |
          # Ensure the .ssh directory exists and has appropriate permissions
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # Remove old known_hosts and rescan the server to prevent SSH issues
          ssh-keygen -R ${{ secrets.SSH_HOST }}
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

          # Add the SSH private key to handle authentication
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Debug: Output the contents of known_hosts to check if key was added correctly
          cat ~/.ssh/known_hosts

      - name: Deploy to Backend Directory
        env:
          HOSTNAME: ${{ secrets.SSH_HOST }}         
          USER_NAME: ${{ secrets.EC2_USER }}        
        run: |
          # Try key-based SSH authentication to deploy the project
          ssh -o StrictHostKeyChecking=no ${USER_NAME}@${HOSTNAME} '
              # Navigate to the backend directory
              cd /home/ubuntu/tracebalebackend-staging &&

              # Configure Git to use SSH for GitHub operations
              git config --global url."git@github.com:".insteadOf "https://github.com/" &&

              # Fetch the latest updates from the staging1 branch
              git fetch --all &&
              git reset --hard origin/staging1 &&
              git pull origin staging1 &&

              # Install project dependencies
              npm install --legacy-peer-deps && 

              # Grant execute permissions to the TypeScript compiler
              chmod +x ./node_modules/.bin/tsc &&

              # Build the application
              npm run build &&

              # Terminate any process using port 5000 and manage PM2 process
              sudo lsof -t -i:5000 | xargs kill -9 &&
              pm2 delete backend &&

              # Restart the application using PM2
              pm2 start npm --name "backend" -- start
          ' || {
            # Fallback to password-based SSH authentication if key-based fails
            echo "Key-based authentication failed. Trying password authentication..." &&
            sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${USER_NAME}@${HOSTNAME} '
              cd /home/ubuntu/tracebalebackend-staging &&
              git config --global url."git@github.com:".insteadOf "https://github.com/" &&
              git fetch --all &&
              git reset --hard origin/staging1 &&
              git pull origin staging1 &&
              npm install --legacy-peer-deps &&
              chmod +x ./node_modules/.bin/tsc &&
              npm run build &&
              sudo lsof -t -i:5000 | xargs kill -9 &&
              pm2 delete backend &&
              pm2 start npm --name "backend" -- start
            '
          }
